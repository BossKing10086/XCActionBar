//
//  NSIndexSet+XCCircularIndexSet.m
//  XCActionBar
//
//  Created by Pedro Gomes on 11/04/2015.
//  Copyright (c) 2015 Pedro Gomes. All rights reserved.
//

#import <objc/runtime.h>
#import "NSIndexSet+XCCircularIndexSet.h"

const void *XCSelectedIndexKey = "SelectedIndex";

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@implementation NSIndexSet (XCCircularIndexSet)


////////////////////////////////////////////////////////////////////////////////
- (void)setSelectedIndex:(NSUInteger)index
{
    NSParameterAssert([self containsIndex:index]);
    
    objc_setAssociatedObject(self, XCSelectedIndexKey, @(index), OBJC_ASSOCIATION_RETAIN);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (NSUInteger)selectedIndex
{
    [self ensureSelectedIndex];
    
    NSNumber *selected = objc_getAssociatedObject(self, XCSelectedIndexKey);
    return [selected unsignedIntegerValue];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (NSUInteger)nextIndex
{
    [self ensureSelectedIndex];
    
    NSUInteger next = [self indexGreaterThanIndex:self.selectedIndex];
    return (next == NSNotFound ?
            [self firstIndex] :
            next);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (NSUInteger)previousIndex
{
    [self ensureSelectedIndex];
    
    NSUInteger previous = [self indexLessThanIndex:self.selectedIndex];
    return (previous == NSNotFound ?
            [self lastIndex] :
            previous);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)selectNextIndex
{
    self.selectedIndex = [self nextIndex];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)selectPreviousIndex
{
    self.selectedIndex = [self previousIndex];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)ensureSelectedIndex
{
    NSAssert(self.count > 0, @"Cannot operate on an empty index set.");
    
    NSNumber *selected = objc_getAssociatedObject(self, XCSelectedIndexKey);
    if(selected == nil) [self setSelectedIndex:[self firstIndex]];
}

@end
