//
//  XCActionBarPresetDataSource.m
//  XCActionBar
//
//  Created by Pedro Gomes on 09/04/2015.
//  Copyright (c) 2015 Pedro Gomes. All rights reserved.
//

#import "XCActionPreset.h"
#import "XCActionPresetSource.h"
#import "XCActionBarPresetDataSource.h"

#import "XCSearchResultCell.h"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@interface XCActionBarPresetDataSource ()

@property (nonatomic, weak) id<XCActionPresetSource> presetSource;

@property (nonatomic, assign) NSInteger selectedObjectIndex;
@property (nonatomic,   copy) NSString  *searchQuery;
@property (nonatomic        ) NSArray   *presets;

@end

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@implementation XCActionBarPresetDataSource

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (instancetype)initWithPresetSource:(id<XCActionPresetSource>)presetSource
{
    if((self = [super init])) {
        self.presets      = [presetSource retrievePresets];
        self.presetSource = presetSource;
    }
    return self;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)updateSelectedObjectIndex:(NSUInteger)index
{
    self.selectedObjectIndex = index;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)updateSearchQuery:(NSString *)query
{
    self.searchQuery = query;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)clearResults
{
    self.presets = @[];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (NSUInteger)numberOfObjects
{
    return self.presets.count;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (id<XCActionPreset>)objectAtIndex:(NSUInteger)index
{
    return self.presets[index];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (id<XCActionPreset>)selectedObject
{
    return [self objectAtIndex:self.selectedObjectIndex];
}

#pragma mark - NSTableViewDataSource

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (NSInteger)numberOfRowsInTableView:(NSTableView *)tableView;
{
    return self.presets.count;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (id)tableView:(NSTableView *)aTableView objectValueForTableColumn:(NSTableColumn *)aTableColumn row:(NSInteger)rowIndex
{
    return self.presets[rowIndex];
}

#pragma mark - NSTableViewDelegate

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (NSView *)tableView:(NSTableView *)tableView viewForTableColumn:(NSTableColumn *)tableColumn row:(NSInteger)row
{
    XCSearchResultCell *cell = [tableView makeViewWithIdentifier:NSStringFromClass([XCSearchResultCell class]) owner:self];
    
    id<XCActionPreset> preset = [self objectAtIndex:row];
    
    NSMutableAttributedString *title = [[NSMutableAttributedString alloc] initWithString:TRSafeString(preset.title)];
    
    cell.textField.allowsEditingTextAttributes = YES;
    
    cell.textField.attributedStringValue = title;
    cell.subtitleTextField.stringValue   = TRSafeString(preset.summary);
    
    return cell;
}

@end
