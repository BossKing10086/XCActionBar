//
//  XCActionBarArgumentInputStateHandler.m
//  XCActionBar
//
//  Created by Pedro Gomes on 29/03/2015.
//  Copyright (c) 2015 Pedro Gomes. All rights reserved.
//

#import "XCActionBarArgumentInputStateController.h"
#import "XCActionBarCommandProcessor.h"
#import "XCActionInterface.h"
#import "XCActionPreset.h"
#import "XCActionPresetSource.h"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@interface XCActionBarArgumentInputStateController ()

@property (nonatomic, copy) NSString *arguments;

@property (nonatomic, weak) id<XCActionBarCommandProcessor> commandProcessor;
@property (nonatomic, weak) NSTextField *inputField;
@property (nonatomic, weak) NSTableView *tableView;

@property (nonatomic, weak) id<XCActionInterface> action;

@end

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
@implementation XCActionBarArgumentInputStateController

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (instancetype)initWithCommandProcessor:(id<XCActionBarCommandProcessor>)processor
                               tableView:(NSTableView *)tableView
                              inputField:(NSTextField *)inputField
{
    if((self = [super init])) {
        self.commandProcessor = processor;
        self.inputField       = inputField;
        self.tableView        = tableView;
    }
    return self;
}

#pragma mark - XCActionBarCommandHandler

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)enter
{}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)enterWithAction:(id<XCActionInterface>)selectedAction
{
    self.action    = selectedAction;
    self.arguments = nil;
    
    id delegate = self.inputField.delegate;
    self.inputField.delegate = nil;
    
    self.inputField.stringValue       = @"";
    self.inputField.placeholderString = selectedAction.argumentHint;
    
    self.inputField.delegate = delegate;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (void)exit
{
    self.action    = nil;
    self.arguments = nil;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleCursorUpCommand
{
    [self.commandProcessor enterActionSearchState];
    [self.commandProcessor selectPreviousSearchResult];
    
    return YES;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleCursorDownCommand
{
    [self.commandProcessor enterActionSearchState];
    [self.commandProcessor selectNextSearchResult];
    
    return YES;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleCursorLeftCommand
{
    return [self.commandProcessor enterActionSearchState];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleCursorRightCommand;
{
    return YES;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleDoubleClickCommand
{
    return [self.commandProcessor executeAction:self.action];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleEnterCommand
{
    return [self.commandProcessor executeAction:self.action withArguments:self.arguments];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleTabCommand
{
    return [self.commandProcessor enterActionSearchState];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleCancelCommand
{
    return [self.commandProcessor cancel];
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
- (BOOL)handleTextInputCommand:(NSString *)text
{
    self.arguments = text;
    
    return YES;
}

@end
